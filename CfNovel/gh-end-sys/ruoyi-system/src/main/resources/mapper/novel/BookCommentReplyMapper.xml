<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.novel.mapper.BookCommentReplyMapper">
    
    <resultMap type="BookCommentReply" id="BookCommentReplyResult">
        <result property="id"    column="id"    />
        <result property="commentId"    column="comment_id"    />
        <result property="replyContent"    column="reply_content"    />
        <result property="auditStatus"    column="audit_status"    />
        <result property="createTime"    column="create_time"    />
        <result property="createUserId"    column="create_user_id"    />
    </resultMap>

    <sql id="selectBookCommentReplyVo">
        select id, comment_id, reply_content, audit_status, create_time, create_user_id from book_comment_reply
    </sql>

    <select id="selectBookCommentReplyList" parameterType="BookCommentReply" resultMap="BookCommentReplyResult">
        <include refid="selectBookCommentReplyVo"/>
        <where>  
            <if test="commentId != null "> and comment_id = #{commentId}</if>
            <if test="replyContent != null  and replyContent != ''"> and reply_content = #{replyContent}</if>
            <if test="auditStatus != null "> and audit_status = #{auditStatus}</if>
            <if test="createUserId != null "> and create_user_id = #{createUserId}</if>
        </where>
    </select>
    
    <select id="selectBookCommentReplyById" parameterType="Long" resultMap="BookCommentReplyResult">
        <include refid="selectBookCommentReplyVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBookCommentReply" parameterType="BookCommentReply">
        insert into book_comment_reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="commentId != null">comment_id,</if>
            <if test="replyContent != null">reply_content,</if>
            <if test="auditStatus != null">audit_status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createUserId != null">create_user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="commentId != null">#{commentId},</if>
            <if test="replyContent != null">#{replyContent},</if>
            <if test="auditStatus != null">#{auditStatus},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createUserId != null">#{createUserId},</if>
         </trim>
    </insert>

    <update id="updateBookCommentReply" parameterType="BookCommentReply">
        update book_comment_reply
        <trim prefix="SET" suffixOverrides=",">
            <if test="commentId != null">comment_id = #{commentId},</if>
            <if test="replyContent != null">reply_content = #{replyContent},</if>
            <if test="auditStatus != null">audit_status = #{auditStatus},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createUserId != null">create_user_id = #{createUserId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBookCommentReplyById" parameterType="Long">
        delete from book_comment_reply where id = #{id}
    </delete>

    <delete id="deleteBookCommentReplyByIds" parameterType="String">
        delete from book_comment_reply where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>